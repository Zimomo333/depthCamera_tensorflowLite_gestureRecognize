apply plugin: 'com.android.application'

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss', TimeZone.getTimeZone("GMT+08:00"))
    return formattedDate
}

static def genBuildNumber() {
    return String.valueOf(buildTime())
}

buildscript {

    repositories {
        google()
        jcenter()
        maven { url  "http://dl.bintray.com/kezong/maven" }
    }

    dependencies {
        classpath 'com.kezong:fat-aar:1.0.1'
        classpath 'com.android.tools.build:gradle:3.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {

    repositories {
        google()
        jcenter()
    }

}

android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.myntai.d.sdk.sample"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.3.9"

        buildConfigField "String", "BUILD_NUMBER", "\"" + genBuildNumber() + "\""
        resValue "string", "package_name", defaultConfig.applicationId
        resValue 'string', 'app_name', 'MYNT EYE'
    }

    signingConfigs {
        config {
            keyAlias "mynteye"
            keyPassword "123456"
            storeFile file("./mynteye-demo-release.jks")
            storePassword "123456"
        }
    }

    productFlavors {

    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.config
        }

        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    applicationVariants.all { variant ->
        if(variant.buildType.name.equals('release')) {
            variant.outputs.all {
                outputFileName = "mynteye_d_android_sdk_sample_${defaultConfig.versionName}_${buildTime()}.apk"
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    // Build off of nightly TensorFlow Lite
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite-support:0.0.0-nightly'
}

repositories {
    mavenCentral()
}
